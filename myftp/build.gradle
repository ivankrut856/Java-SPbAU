plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.7'
}

repositories {
    mavenCentral()
}
dependencies {
    testCompile('org.junit.jupiter:junit-jupiter-api:5.3.2')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.2')
    compile('org.jetbrains:annotations:16.0.2')
    compile('org.apache.commons:commons-lang3:3.0')
    compile('com.google.guava:guava:27.1-jre')
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
}


group 'ladybugTeam'
version '1.0-SNAPSHOT'

javafx {
    version = "12"
    modules = [ 'javafx.controls' ]
}

sourceCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    testCompile(
            'org.junit.jupiter:junit-jupiter-api:5.1.0',
    )
    testRuntime(
            'org.junit.jupiter:junit-jupiter-engine:5.1.0',
            'org.junit.platform:junit-platform-launcher:1.1.0',
            'org.junit.platform:junit-platform-runner:1.1.0'
    )
    compile(
            'org.jetbrains:annotations:15.0'
    )
}

test {
    useJUnitPlatform()
}

task clientJar(dependsOn: classes, type: Jar) {
    archiveBaseName = "ClientInterface"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar

    manifest {
        attributes("Main-Class": "fr.ladybug.team.client.ClientInterface")
    }
}

task serverJar(dependsOn: classes, type: Jar) {
    archiveBaseName = "Server"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar

    manifest {
        attributes("Main-Class": "fr.ladybug.team.server.Server")
    }
}

mainClassName = "fr.ladybug.team.client.ClientInterface"

build {
    dependsOn clientJar
    dependsOn serverJar
}